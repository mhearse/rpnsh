#!/usr/bin/env python

try:
    import os
    import sys
    from pprint import *
except ImportError, err:
    print "Error Importing module. %s" % (err)
    sys.exit()

class rpnsh:
    ##############################################
    def __init__(self, args=None):
    ##############################################
        # Allow args to be optional.
        args = {} if args is None else args

        self.tcolors = {
            'ENDC'      : '\033[0m',
            'BOLD'      : '\033[1m',
            'UNDERLINE' : '\033[4m',
            'INVERSE'   : '\033[7m',
        }

        self.history_dict = {}
        self.readHistory()

    ##############################################
    def readHistory(self):
    ##############################################
        with open(os.path.join(os.path.expanduser('~'),'.bash_history')) as f:
            for line in f:
                line = line.rstrip()
                if self.history_dict.get(line):
                    self.history_dict[line] += 1
                else:
                    self.history_dict[line] = 1

    ##############################################
    def outputHistory(self, order=None):
    ##############################################
        if not self.history_dict:
            self.readHistory()

        if order == 'coalesce':
            # sort by first word in history
            # coalese output by first command
            True
        else:
            for cmd, cnt in sorted(self.history_dict.iteritems(), key=lambda (k,v): (v,k)):
                print "{0:60} [{1}]".format(cmd, cnt)

##############################################
if __name__=='__main__':
##############################################
    obj = rpnsh()
    obj.outputHistory()

    print obj.tcolors['INVERSE'] + "Warning: No active frommets remain. Continue?" + obj.tcolors['ENDC']


# type :commands type: args





